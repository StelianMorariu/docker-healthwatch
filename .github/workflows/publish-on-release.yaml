# .github/workflows/release-image.yml
name: Release Docker image

on:
  release:
    types: [published]
  workflow_dispatch:   # allows manual runs  

permissions:
  contents: read
  packages: write   # needed for GHCR push

env:
  IMAGE_NAME: docker-healthwatch

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ===== GHCR =====
      - name: Extract Docker metadata (GHCR)
        id: meta-ghcr
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ github.event.release.tag_name }}
            type=semver,pattern={{major}}.{{minor}},value=${{ github.event.release.tag_name }}
            type=semver,pattern={{major}},value=${{ github.event.release.tag_name }}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.version=${{ github.event.release.tag_name }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build & Push (GHCR)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-ghcr.outputs.tags }}
          labels: ${{ steps.meta-ghcr.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ github.event.release.tag_name }}
            VCS_REF=${{ github.sha }}
            
